#include<bits/stdc++.h>
using namespace std;
int n,m;
vector<int>adj[1001];
bool visited[1001];
void dfs(int u){
    visited[u] = true;
    for(int x:adj[u]){
        if(!visited[x]){
            dfs(x);
        }
    }

}
void bfs(int u){
    queue<int>q;
    q.push(u);
    visited[u] = true;
    while(!q.empty()){
        int v=q.front();q.pop();
        for(int x:adj[v]){
            if(!visited[x]){
                q.push(x);
                visited[x] = true;
            }
        }
    }
}

void connectedComp(){
    int cnt=0;
    memset(visited,false,sizeof(visited));
    for(int i=1;i<=n;i++){
        if(!visited[i]){
            cnt++;
            dfs(i);
            //bfs(i);
        }
    }
    cout << cnt << endl;
}
int main(){
    int T;
    cin >> T;
    while(T--){
        cin >> n >> m;
        for(int i=1;i<=n;i++){
            adj[i].clear();
        }
        for(int i=0;i<m;i++){
            int x,y;
            cin >> x >> y;
            adj[x].push_back(y);
            adj[y].push_back(x);
        }
        connectedComp();
    }
}
